<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd">



    <context:component-scan base-package="com.pier.*" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
        <!--<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" />-->
    </context:component-scan>

    <!-- 一个配置节解决映射器和适配器的配置注解配置 -->
    <!-- 返回json 方法一 需要导入 fastjson.jar包 -->
    <mvc:annotation-driven>
        <!-- register-defaults="true"将我们配置文件创建的bean设置为默认的,springmvc就不会再后台创建了 -->
        <!-- 属性解释:
            1.register-defaults=true:告诉Springmvc使用我们配置文件创建的对象,不再自己创建(框架自己创建,是通过无参构造,会使用默认的字符集)
            2.index="0" value="UTF-8":配置的是 defaultCharset 属性,设置为UTF-8
         -->
        <mvc:message-converters register-defaults="true">
            <!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
            <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <!-- 这里顺序不能反，一定先写text/html,不然ie下出现下载提示 -->
                        <value>text/html;charset=UTF-8</value>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <context:property-placeholder ignore-unresolvable="true"
                                  location="classpath:file.properties"/>
    <!-- 静态资源映射 -->
    <mvc:resources mapping="/css/**"    location="file:${filepath}/css/"/>
    <mvc:resources mapping="/js/**"     location="file:${filepath}/js/"/>
    <mvc:resources mapping="/img/**"    location="file:${filepath}/img/"/>
    <mvc:resources mapping="/plugin/**" location="file:${filepath}/plugin/"/>
    <mvc:resources mapping="/upload/**" location="file:${filepath}/upload/"/>

    <!-- 在Spring MVC上下文中定义一个org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler，
	它会像一个检查员，对进入DispatcherServlet的URL进行筛查，如果发现是静态资源的请求，就将该请求转由Web应用服务器默认的Servlet处理，
	如果不是静态资源的请求，才由DispatcherServlet继续处理。-->
    <mvc:default-servlet-handler />

    <!-- 配置视图解析器
        进行jsp解析，默认使用jstl标签，classpath下得有jstl的包
    -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" >
        <!--配置前缀和后缀，也可以不指定-->
        <property name="prefix" value="/WEB-INF/view/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--&lt;!&ndash;文件上传&ndash;&gt;-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!--设置上传最大尺寸为50MB-->
        <property name="maxUploadSizePerFile" value="52428800"/>
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="resolveLazily" value="true"/>
    </bean>

    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/admin"/>
            <mvc:mapping path="/admin/**"/>
            <mvc:exclude-mapping path="/**/*.css" />
            <mvc:exclude-mapping path="/**/*.js" />
            <mvc:exclude-mapping path="/**/*.jpg" />
            <mvc:exclude-mapping path="/**/*.png" />
            <bean class="com.pier.interceptor.SecurityInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

    <mvc:cors>
        <mvc:mapping path="/**" />
    </mvc:cors>
</beans>